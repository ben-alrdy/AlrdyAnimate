(()=>{"use strict";const t={easing:"ease"},e={init:function(e={}){const i={...t,...e};document.body.setAttribute("aa-easing",i.easing),document.addEventListener("DOMContentLoaded",(()=>{const t=window.innerWidth<768,e=document.querySelectorAll("[aa-animate], [aa-transition]");window.CSS&&window.CSS.supports&&window.CSS.supports("--a","0")||e.forEach((t=>{const e=t.getAttribute("aa-duration")||"1s",i=t.getAttribute("aa-delay")||"0s";t.style.animationDuration=e,t.style.animationDelay=i})),"IntersectionObserver"in window?e.forEach((e=>{const i=e.getAttribute("aa-mobile"),n=e.getAttribute("aa-duration"),a=e.getAttribute("aa-delay"),o=e.getAttribute("aa-color-initial"),r=e.getAttribute("aa-color-final"),s=e.getAttribute("aa-anchor");let c=e;n&&e.style.setProperty("--animation-duration",n),t&&"no-delay"===i?e.style.setProperty("--animation-delay","0s"):a&&e.style.setProperty("--animation-delay",a),o&&e.style.setProperty("--background-color-initial",o),r&&e.style.setProperty("--background-color-final",r),s&&(c=document.querySelector(s));const l=e.getAttribute("aa-viewport");let d=l?parseFloat(l):.8;if(!isNaN(d)&&d>=0&&d<=1){const t=new IntersectionObserver((t=>{t.forEach((t=>{t.isIntersecting&&e.classList.add("in-view")}))}),{threshold:[0,1],rootMargin:`0px 0px -${100*(1-d)}% 0px`}),i=new IntersectionObserver((t=>{t.forEach((t=>{const i=t.target.getBoundingClientRect();!t.isIntersecting&&i.top>=window.innerHeight&&e.classList.remove("in-view")}))}),{threshold:0,rootMargin:"0px"});t.observe(c),i.observe(c)}})):e.forEach((t=>{t.classList.add("in-view")}))}))}};window.AlrdyAnimate=e})();